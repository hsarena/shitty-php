defaults: &defaults
  docker:
    - image: circleci/php:7.2.8-fpm-stretch
  #working_directory: /var/www
version: 2.1
jobs:
  build:
    <<: *defaults
    steps:
      - checkout

      - run: sudo docker-php-ext-install -j$(nproc) zip mbstring pdo pdo_mysql pcntl bcmath
      - run: sudo docker-php-ext-configure bcmath --enable-bcmath

      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run: composer install --ignore-platform-reqs --no-interaction --no-plugins --no-scripts --prefer-dist

      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor
      - run: 
          name: Start 
          command: php artisan migrate --env=testing --database=sqlite --force

      # run tests with phpunit or codecept
      - run:
          name: Run Unit tests
          command: phpdbg -qrr vendor/bin/phpunit --coverage-clover=coverage.xml
      - run: 
          name: Code Coverage
          command: bash <(curl -s https://codecov.io/bash)
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            export TAG=0.1.${CIRCLE_BUILD_NUM}
            export IMAGE_NAME=hsarena/shitty-app:$TAG
            docker build -t $IMAGE_NAME  .
            docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD
            docker push $IMAGE_NAME
      - restore_cache:
          keys:
            - kubectl-bin
      - run:
          name: Install Kubectl
          command: |
            set -x
            curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.16.0/bin/linux/amd64/kubectl
            sudo chmod +x ./kubectl
            #sudo apt-get update && sudo apt-get install -y sudo apt-transport-https ca-certificates
            ##curl -s https://packages.cloud.google.com/sudo apt/doc/sudo apt-key.gpg | sudo apt-key add -
            #echo "deb https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee -a /etc/apt/sources.list.d/kubernetes.list
            #sudo apt-get  update
            #sudo apt-get install  --allow-unauthenticated -y kubectl
      - save_cache:
          key: kubectl-bin
          paths:
            - ./kubectl
      - run:
          name: Deploy to K8S
          command: |
            echo ${KUBECONFIG}
            echo -n ${KUBECONFIG} | base64 -d > kubeconfig.yml
            ./kubectl --kubeconfig=kubeconfig.yml --namespace=rc set image deployment/main-app main-app=kaarbon/main-repo:main-app-latest